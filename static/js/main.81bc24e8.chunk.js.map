{"version":3,"sources":["DigitButton.js","OperationButton.js","App.js","index.js"],"names":["DigitButton","_ref","dispatch","digit","React","createElement","onClick","type","ACTIONS","ADD_DIGIT","payload","OperationButton","operation","className","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","overwrite","_objectSpread","currentOperand","includes","concat","previousOperand","evaluate","length","slice","_ref2","prev","parseFloat","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","_operand$split","split","_operand$split2","_slicedToArray","integer","decimal","format","App","_useReducer","useReducer","_useReducer2","_useReducer2$","id","style","backgroundColor","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.81bc24e8.chunk.js","sourcesContent":["import { ACTIONS } from \"./App\"\r\nimport React from \"react\";\r\n\r\nexport default function DigitButton({ dispatch, digit }) {\r\n  return (\r\n    <button\r\n      onClick={() => dispatch({ type: ACTIONS.ADD_DIGIT, payload: { digit } })}\r\n    >\r\n      {digit}\r\n    </button>\r\n  )\r\n}","import { ACTIONS } from \"./App\"\r\nimport React from \"react\";\r\n\r\nexport default function OperationButton({ dispatch, operation }) {\r\n  return (\r\n    <button\r\n      className=\"OperationButton\"\r\n      onClick={() =>\r\n        dispatch({ type: ACTIONS.CHOOSE_OPERATION, payload: { operation } })\r\n      }\r\n    >\r\n      {operation}\r\n    </button>\r\n  )\r\n}","import React, { useReducer } from \"react\"\nimport DigitButton from \"./DigitButton\"\nimport OperationButton from \"./OperationButton\"\nimport \"./App.css\"\n\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\",\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false,\n        }\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state\n      }\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state\n      }\n\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      }\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state\n      }\n\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n        }\n      }\n\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        }\n      }\n\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      }\n    case ACTIONS.CLEAR:\n      return {}\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n        }\n      }\n      if (state.currentOperand == null) return state\n      if (state.currentOperand.length === 1) {\n        return { ...state, currentOperand: null }\n      }\n\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1),\n      }\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ) {\n        return state\n      }\n\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      }\n      default:\n        return;\n    }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n  if (isNaN(prev) || isNaN(current)) return \"\"\n  let computation = \"\"\n  switch (operation) {\n    case \"+\":\n      computation = prev + current\n      break\n    case \"-\":\n      computation = prev - current\n      break\n    case \"*\":\n      computation = prev * current\n      break\n    case \"รท\":\n      computation = prev / current\n      break\n    default:\n      computation = \"\"\n  }\n\n  return computation.toString()\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n})\nfunction formatOperand(operand) {\n  if (operand == null) return\n  const [integer, decimal] = operand.split(\".\")\n  if (decimal == null) return INTEGER_FORMATTER.format(integer)\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\n}\n\nfunction App() {\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    {}\n  )\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {formatOperand(previousOperand)} {operation}\n        </div>\n        <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\n      </div>\n      <button id=\"ac\" style={{backgroundColor: \"yellow\"}} onClick={() => dispatch({ type: ACTIONS.CLEAR })}>AC</button>\n      <button id=\"del\" style={{backgroundColor: \"orange\"}} onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>DEL</button>\n      <OperationButton operation=\"รท\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <button className=\"equals\" style={{backgroundColor: \"lightgreen\"}} onClick={() => dispatch({ type: ACTIONS.EVALUATE })}>=</button>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}